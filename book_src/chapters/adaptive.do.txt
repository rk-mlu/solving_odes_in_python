# #if FORMAT == 'ipynb'
========= Adaptive time step methods =========
# #endif
TODO:
* Introduce the idea
* Embedded methods
* Controlling the time step


In practical computations, one seeks to achieve a desired accuracy with the minimum 
computational effort. For a given method, this requires finding the largest possible 
value of the time step $\Delta t$. The step size is influenced by the required accuracy, 
the method's order, and the solution's characteristics. In regions where the solution is smooth, 
larger time steps can be used without introducing significant error, but in regions where the 
solution has rapid variations, a smaller time step must be employed. We may illustrate this
situation by considering a particular class of ODE models, which describe the so-called
*action potential* of excitable cells. Such models, first introduced by
Hodgkin and Huxley cite{HodgkinHuxley}, are important tools for studying the electrophysiology 
of cells such as neurons and different types of muscle cells. The main variable of interest
in these models is usually the transmembrane potential, i.e., the potential difference between
the internals of a cell and its surrounding. When an excitable cell such as a neuron or
a muscle cell is stimulated electrically it triggers a cascade of processes in the
cell membrane, leading to various ion channels opening and closing, and the membrane
potential going from its resting negative state to approximately zero or slightly positive, 
before returning to the resting value. This process of *depolarization* followed by 
*repolarization* is called the action potential, and is illustrated in Figure ref{ch5:fig:winslow}.
We see that the solution changes extremely quickly as the cell is depolarized, the so-called upstroke
phase, and is nearly stationary in the plateau and resting phases. This behavior motivates
methods that can adjust the time step to the properties of the
solution. Commonly referred to as adaptive methods or methods with
automatic time step control, this is an important part of
successful ODE software.

Automatic step size control can be based on the solution's characteristics or on estimates
of the error. 
One obvious example is the  in the cell model ODEs, the algorithm can check for fast variations in $v$ during 
the upstroke and choose a smaller time step. This approach was used by Rush and Larsen in 
their solution to the cell model ODEs, but its applicability is limited. A more general 
approach is to base the step size on error estimates computed using numerical solutions 
of different accuracy. One common method for estimating the local error is step doubling. 
Here, two steps of length $\Delta t$ are performed, and the error after one step and two 
steps are estimated. The error after two steps of length $\Delta t$ and after one step of 
length $2\Delta t$ are compared, and the error estimate is based on this comparison. The 
length of the next time step is then chosen so that the local error falls below a specified threshold.




