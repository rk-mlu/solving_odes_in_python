# Note on the Springer T4 style: here we use the modifications
# introduced in t4do.sty and svmonodo.sty (both are bundled with DocOnce).

TITLE:  Solving Ordinary Differential Equations in  Python
AUTHOR: Joakim Sundnes at Simula Research Laboratory 
DATE: today

## Handy mako variables and functions for the preprocessing step
# #include "../chapters/mako_code.txt"

## Externaldocuments: ../chapters/fake/main_fake


========= Preface  =========
label{ch:preface}
# #include "../chapters/preface_ode.do.txt"

TOC: on

!split
========= Programming a simple ODE solver =========
label{ch:ode_intro}
# #include "../chapters/chapter1.do.txt"
## #include "../chapters/ode_systems.do.txt"
## #include "../chapters/scipy.do.txt"


!split
========= Improving the accuracy =========
label{ch:runge_kutta}
# #include "../chapters/rungekutta1.do.txt"



!split
========= Stable solvers for stiff ODE systems =========
label{ch:stiff}
# #include "../chapters/rungekutta2.do.txt"

!split
========= Adaptive time step methods =========
label{ch:adaptive}
# #include "../chapters/adaptive.do.txt"


!split
========= Modeling infectious diseases =========
label{ch:disease_models}
# #include "../chapters/disease_modeling.do.txt"

!split
========= Appendix: Programming of difference equations =========
label{ch:diff_eq}
# #include "../chapters/diffeq.do.txt"

!split
========= References =========
BIBFILE: ../bib/papers.pub

